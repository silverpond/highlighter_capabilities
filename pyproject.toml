[project]
name = "highlighter-capabilities"
version =  "0.1"
readme = "README.md"
description = "Capabilities compatable with the Highlighter Agent runner"
requires-python = ">=3.7,<4.0"

# From pep 0639:
# https://peps.python.org/pep-0639/#i-have-a-private-package-that-won-t-be-distributed
license-files = { paths = ["LICENSE"] }


keywords = [
  "enterprise perception system"
]

# See: https://pypi.org/classifiers/
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: Unix",
    "Intended Audience :: Developers",
]

authors = [
{name = "Joshua Patterson", email = "joshua.patterson@silverpond.com.au"},
{name = "Jono Chang", email = "jonathan.chang@silverpond.com.au"},
{name = "Simon Hudson", email = "simon.hudson@silverpond.com.au"},
]


dependencies = [
  # version convention tracks the upstream aiko verson. If the silverpond
  # aiko_services code diverges we add add a 3rd version indicator and 
  # increment accordingly. eg: Upstream v0.4 with two divergent changes would 
  # mean the silverpond version would be v0.4.2
  #"highlighter-sdk>=0.5.4",
  "click>=7, <9, != 8.0.0",
]


[tool.hatch.envs.default]
dependencies = [
  "pytest~=8.0",
  "twine",
  "black>=19.10b0",
  "pylint~=2.6",
  "wrapt",  # needed due to error in pylint
  "nbstripout",
  "isort~=5.0",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"

check = [
  #"flake8 .",
  "black --config pyproject.toml --check . || (echo \"Black formatting check failed\"; exit 1)",
  "isort --check-only --diff . || (echo \"isort check failed\"; exit 1)",
  "echo highlighter-sdk formatting checks passed!",
  ]

# Run formatting
# hatch run fmt:fmt
fmt = [
  "isort --cr . --resolve-all-configs --overwrite-in-place . ",
  "black --config pyproject.toml .",
  "nbstripout notebooks/*",
  "check",
  ]

#[tool.hatch]
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
#[build-system]
#requires = ["setuptools", "setuptools-scm"]
#build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"

[tool.black]
line-length = 110
target-version = ['py310']

# https://hatch.pypa.io/latest/config/build/#build-targets
[tool.hatch.build.targets.wheel]
packages = ["src/highlighter_capabilities"]
exclude = [
  "dist/",
  "venv/",
  "hl/",
  "docs/",
]

[tool.hatch.build.targets.sdist]
packages = ["src/highlighter_capabilities"]
exclude = [
  "dist/",
  "venv/",
  "hl/",
  "docs/",
]

